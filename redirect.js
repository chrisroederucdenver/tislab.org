// DO NOT EDIT OR FORMAT. GENERATED AUTOMATICALLY FROM PRIVATE REDIRECTS REPO.
const list = "WwogIHsKICAgICJmcm9tIjogIm1lbHpvb20iLAogICAgInRvIjogImh0dHBzOi8vdWNkZW52ZXIuem9vbS51cy9qLzY0MjMzNTI0MTQ/cHdkPVQwUkNWRkV6T1VaS1pISkdja1pIY0V4UFZGcG1kejA5IgogIH0sCiAgewogICAgImZyb20iOiAianVsem9vbSIsCiAgICAidG8iOiAiaHR0cHM6Ly91Y2RlbnZlci56b29tLnVzL2ovMjY2Mjc0NTE4Mj9wd2Q9VXpVMVYwWnhiVlpZV0cxNmFpOUhUMEpJT0RkV1p6MDkiCiAgfSwKICB7CiAgICAiZnJvbSI6ICJuaWNvbGV6b29tIiwKICAgICJ0byI6ICJodHRwczovL3VjZGVudmVyLnpvb20udXMvai8yMjk3MDY3NzU4P3B3ZD1TbkZ5TWtoSldHWlhaVkJvUVdwNFVVRTVPWGd4UVQwOSIKICB9LAogIHsKICAgICJmcm9tIjogIm1hdHR6b29tIiwKICAgICJ0byI6ICJodHRwczovL3VjZGVudmVyLnpvb20udXMvai80MjE4NzUzMjM4P3B3ZD1OV3RZYW5jMU5IVTVNVUkyVGpaMU1FbGFjaXRvZHowOSAiCiAgfSwKICB7CiAgICAiZnJvbSI6ICJzaGFoaW16b29tIiwKICAgICJ0byI6ICJodHRwczovL3VjZGVudmVyLnpvb20udXMvai84MTQ0ODY2OTU0P3B3ZD1hR05HU21KRmNFdHBlaTh5ZG05YVEwYzNNbWRTZHowOSIKICB9LAogIHsKICAgICJmcm9tIjogInNoYXduem9vbSIsCiAgICAidG8iOiAiaHR0cHM6Ly91Y2RlbnZlci56b29tLnVzL2ovNzQzMjgxMzc0ND9wd2Q9VEUxSk1tdE5WbkExU1U1clpWZERPRkZ3YWs5TVp6MDkiCiAgfSwKICB7CiAgICAiZnJvbSI6ICJuM2MtcmVzZWFyY2hlci1vZmZpY2UtaG91cnMiLAogICAgInRvIjogImh0dHBzOi8vdWNkZW52ZXIuem9vbS51cy9teS96MTljM2RhIgogIH0sCiAgewogICAgImZyb20iOiAidGltem9vbSIsCiAgICAidG8iOiAiaHR0cHM6Ly91Y2RlbnZlci56b29tLnVzL2ovNTY3MTUxMDAwNz9wd2Q9VHpCSmFrdDJlVTV3ZVZoMmRTc3dNRFU0VTJzclVUMDkiCiAgfSwKICB7CiAgICAiZnJvbSI6ICJrZXpvb20iLAogICAgInRvIjogImh0dHBzOi8vdWNkZW52ZXIuem9vbS51cy9qLzYyMjg1NDY0OTQ/cHdkPVVIYzVhVEYyZGpWNGQyTjZla1p3ZVZGTmVWSlJkejA5IgogIH0sCiAgewogICAgImZyb20iOiAic2FicmluYXpvb20iLAogICAgInRvIjogImh0dHBzOi8vdWNkZW52ZXIuem9vbS51cy9teS9zYWJyaW5hdG9ybz9wd2Q9Y1ZscU1rNXBjVzQyYjB0eEswTlRZMEpzTjBSSFp6MDkgIgogIH0sCiAgewogICAgImZyb20iOiAiYnJhbmRvbnpvb20iLAogICAgInRvIjogImh0dHBzOi8vdWNkZW52ZXIuem9vbS51cy9teS96Njk4amNudm5lOTN3ZmxrOTIzdWVvZndxZW93ZWprbnMwMDl6ej9wd2Q9Y21weVR6WmtjSGRSTTFoSE9GQllXbWs0Vm5KQlFUMDkiCiAgfSwKICB7CiAgICAiZnJvbSI6ICJicnlhbnpvb20iLAogICAgInRvIjogImh0dHBzOi8vdWNkZW52ZXIuem9vbS51cy9qLzgzMjYwNjIxMTU/cHdkPWVWaEhRWFJhUW5KdFFYTk9hMWxRWlV4SU0xZGtRVDA5IgogIH0sCiAgewogICAgImZyb20iOiAiY2hyaXN6b29tIiwKICAgICJ0byI6ICJodHRwczovL3VjZGVudmVyLnpvb20udXMvai80NjA2ODYzNTIyP3B3ZD1aMjFCYUdFMmNtdFRSMVZPZG10UlN5OTNUR0pYUVQwOSIKICB9LAogIHsKICAgICJmcm9tIjogImFuaXRhem9vbSIsCiAgICAidG8iOiAiaHR0cHM6Ly91Y2RlbnZlci56b29tLnVzL2ovNDMyNzI1ODk1Nz9wd2Q9VkhkS2VHRXJlRFZoTHpsSVdrWjJUVFIyTTB0NWR6MDkiCiAgfSwKICB7CiAgICAiZnJvbSI6ICJzYXJhaHpvb20iLAogICAgInRvIjogImh0dHBzOi8vdWNkZW52ZXIuem9vbS51cy9qLzI3NzQ5NjQ1MTA/cHdkPVJsQTRNazFITlRaMlRFVmhLM1JPY2tsMGJGZDBkejA5IgogIH0sCiAgewogICAgImZyb20iOiAidHVyc3luYXl6b29tIiwKICAgICJ0byI6ICJodHRwczovL3VjZGVudmVyLnpvb20udXMvai81OTYxMzAwMTg5P3B3ZD1jVzE1UlZSb2JtMVJlWFZYV21kS2VUUXZibWswVVQwOSIKICB9LAogIHsKICAgICJmcm9tIjogImdsYXNzem9vbSIsCiAgICAidG8iOiAiaHR0cHM6Ly91Y2RlbnZlci56b29tLnVzL2ovOTI0ODMyODA0ND9wd2Q9U2sxTVJsVnhTVkpaUWk5RVNscGxZa0ZQVldwQlFUMDkiCiAgfSwKICB7CiAgICAiZnJvbSI6ICJtb25pem9vbSIsCiAgICAidG8iOiAiaHR0cHM6Ly9sYm5sLnpvb20udXMvai84NTk5OTU0NTYxP3B3ZD1ZMjQzYTNOTVdtWkVTMk5zUzNvMldsWjROVlI2ZHowOSIKICB9LAogIHsKICAgICJmcm9tIjogImtheXpvb20iLAogICAgInRvIjogImh0dHBzOi8vdWNkZW52ZXIuem9vbS51cy9qLzc3ODE2NTg2MTk/cHdkPVdIRlRMMWMzTW5sV1pFd3hUM0JLYm5Sd2VUSjNaejA5IgogIH0sCiAgewogICAgImZyb20iOiAidmljdG9yaWF6b29tIiwKICAgICJ0byI6ICJodHRwczovL3VjZGVudmVyLnpvb20udXMvai80ODA0NDU4MDg0P3B3ZD1Xa1IyVlRoblNWbzJZMXB2UlVsd1oycFVOMlpOZHowOSIKICB9LAogIHsKICAgICJmcm9tIjogImh1ZGRsZXpvb20iLAogICAgInRvIjogImh0dHBzOi8vbGJubC56b29tLnVzL2ovMTYzMjE4ODgxP3B3ZD1SblJLY0M4NGJqVXJkalpuUmtoUGNIQTRlVU14UVQwOSIKICB9LAogIHsKICAgICJmcm9tIjogInZldGVyaW5hcnl3b3Jrc2hvcDIwMjIiLAogICAgInRvIjogImh0dHBzOi8vdWNkZW52ZXIuem9vbS51cy9qLzUwODM3OTc1MTM/cHdkPWNtcHlUelprY0hkUk0xaEhPRkJZV21rNFZuSkJRVDA5ICIKICB9LAogIHsKICAgICJmcm9tIjogIm9udG9sb2d5Y29udHJpYnV0b3IiLAogICAgInRvIjogImh0dHBzOi8vb2JvYWNhZGVteS5naXRodWIuaW8vb2Jvb2svcGF0aHdheXMvb250b2xvZ3ktY29udHJpYnV0b3IvIgogIH0sCiAgewogICAgImZyb20iOiAidmV0LWNvZGUtb2YtY29uZHVjdCIsCiAgICAidG8iOiAiaHR0cHM6Ly9tb25hcmNoLWluaXRpYXRpdmUuZ2l0aHViLmlvL3BoZW5vbWljcy9wYWdlcy92ZXQtY29kZS1vZi1jb25kdWN0Lmh0bWwiCiAgfSwKICB7CiAgICAiZnJvbSI6ICJ2ZXQtYWdlbmRhIiwKICAgICJ0byI6ICJodHRwczovL21vbmFyY2gtaW5pdGlhdGl2ZS5naXRodWIuaW8vcGhlbm9taWNzL3BhZ2VzL3ZldGVyaW5hcnkuaHRtbCIKICB9LAogIHsKICAgICJmcm9tIjogInVnMy1vbmJvYXJkaW5nIiwKICAgICJ0byI6ICJodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9mb3Jtcy9kL2UvMUZBSXBRTFNkb3RWSE9UR1FyRnBtbHV1eXJHOGVILUtzMDJZWjlTbVZKczlpLV9nQTdmazh3b2cvdmlld2Zvcm0iCiAgfSwKICB7CiAgICAiZnJvbSI6ICJ1ZzMtbG9zIiwKICAgICJ0byI6ICJodHRwczovL2RyaXZlLmdvb2dsZS5jb20vZHJpdmUvZm9sZGVycy8xeWVfSDg1S3FjYi1BLVhRVGFHeVpYWjF6cEV3MWdQX3MiCiAgfSwKICB7CiAgICAiZnJvbSI6ICJ1ZzMtZHJpdmUiLAogICAgInRvIjogImh0dHBzOi8vZHJpdmUuZ29vZ2xlLmNvbS9kcml2ZS9mb2xkZXJzLzBBSnNEWXRBU3p6VHRVazlQVkEiCiAgfSwKICB7CiAgICAiZnJvbSI6ICJ1ZzMtcm9zdGVyIiwKICAgICJ0byI6ICJodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9zcHJlYWRzaGVldHMvZC8xaE5rbmZsTkdwcnhoNHpjNGdoLUdpdWlHRnhHQmtNNW9HR3dJZ0tyc2VYUS9lZGl0I2dpZD0xMjA2OTAwOTUwIgogIH0sCiAgewogICAgImZyb20iOiAidWczLXJlc3BsYW4iLAogICAgInRvIjogImh0dHBzOi8vZG9jcy5nb29nbGUuY29tL2RvY3VtZW50L2QvMVVIT3BVUDBmYVhGdFNreVpGS3lyeDBfSkJrbmFpMExVWU8tM2VBQ0ExVUkiCiAgfSwKICB7CiAgICAiZnJvbSI6ICJ1ZzMtYWdlbmRhIiwKICAgICJ0byI6ICJodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9kb2N1bWVudC9kLzEtYmsxdGx2WkdfdzExVUViQklGaHdfSy1PdENmTDNiTnFKUE9wN0R5UUJjL2VkaXQiCiAgfSwKICB7CiAgICAiZnJvbSI6ICJnb29nbGUtaW50cm8iLAogICAgInRvIjogImh0dHBzOi8vZG9jcy5nb29nbGUuY29tL3ByZXNlbnRhdGlvbi9kLzFOcXdNckpzNWI5NWk0c0xFZnBLV3RHTmVwTmg4VUNTT3A2dUZ0cV9EWWljIgogIH0sCiAgewogICAgImZyb20iOiAic3R5bGVndWlkZSIsCiAgICAidG8iOiAiaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vZG9jdW1lbnQvZC8xVFB5bV9LOE1FaXE4Q1pkWTNpel83Q0NRWGlyZ3dHaXJybVZaYjk5cjFJOC9lZGl0I2hlYWRpbmc9aC53bHV4NnJjaTE0anMiCiAgfSwKICB7CiAgICAiZnJvbSI6ICJ1ZzMtYnVkZ2V0IiwKICAgICJ0byI6ICJodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9zcHJlYWRzaGVldHMvZC8xTlBDSWUtcXliQS1VeVV0R2xCZ0NrZk9pcjI2YVNKNWNMcFdicXRzTEwwVS9lZGl0I2dpZD0wIgogIH0sCiAgewogICAgImZyb20iOiAidWczLWJpb3NrZXRjaGVzIiwKICAgICJ0byI6ICJodHRwczovL2RyaXZlLmdvb2dsZS5jb20vZHJpdmUvZm9sZGVycy8xUE9Wd0hSNE5tRmplV05jRlJ4OFk5a3BJNDJMWWVSOXgiCiAgfSwKICB7IAogICAgImZyb20iOiAidWczLXdlbGNvbWUiLAogICAgInRvIjogImh0dHBzOi8vZG9jcy5nb29nbGUuY29tL3ByZXNlbnRhdGlvbi9kLzE3MkdCcG4wZUZvdnVXWFVjLTYySTZZZUM1QXJYZS0tV2Y0X2lSZGprSHpjIgogIH0KXQo=";

const from = window.location.pathname.slice(1);
const to = JSON.parse(window.atob(list)).find((item) => item?.from === from)?.to;

if (to) window.location.href = to;
